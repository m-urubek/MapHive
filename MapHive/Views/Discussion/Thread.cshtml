@using MapHive.Models.Data.DbTableModels
@using MapHive.Models.PageModels
@using System.Data
@model ThreadDisplayPageModel
@{
    ViewData["Title"] = Model.ThreadName;
}

<div class="container">
    <div class="row">
        <div class="col-md-10 offset-md-1">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Map" asp-action="Index">Map</a></li>
                    <li class="breadcrumb-item"><a asp-controller="Map" asp-action="Details" asp-route-id="@Model.LocationId">@Model.LocationName</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.ThreadName</li>
                </ol>
            </nav>
            
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3>@Model.ThreadName</h3>
                    @if (User.IsInRole("Admin"))
                    {
                        <form asp-action="DeleteThread" asp-route-id="@Model.Id" asp-route-locationId="@Model.LocationId" method="post" class="d-inline">
                            <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this thread?');">
                                <i class="fas fa-trash"></i> Delete Thread
                            </button>
                        </form>
                    }
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <small class="text-muted">
                            @if (Model.IsAnonymous && !User.IsInRole("Admin"))
                            {
                                @:Started on @Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")
                            }
                            else
                            {
                                @:Started by 
                                @if (Model.AuthorId is null)
                                {
                                    @Model.AuthorUsername
                                }
                                else
                                {
                                    <a asp-controller="Account" asp-action="PublicProfileById" asp-route-id="@Model.AuthorId">@Model.AuthorUsername</a>
                                }
                                @: on @Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")
                            }
                        </small>
                    </div>
                    
                    @if (Model.ReviewId.HasValue)
                    {
                        <div class="review-content mb-4 p-3 bg-light rounded">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <div>
                                    @if ((Model.AuthorUsername ?? throw new NoNullAllowedException(nameof(Model.AuthorUsername))).Equals("Anonymous", StringComparison.OrdinalIgnoreCase))
                                    {
                                        <span class="fw-bold">@Model.AuthorUsername</span>
                                    }
                                    else
                                    {
                                        <span class="fw-bold">
                                            <a asp-controller="Account" asp-action="PublicProfileById" asp-route-id="@Model.AuthorId" >@Model.AuthorUsername</a>
                                        </span>
                                    }
                                    <span class="text-muted ms-2">@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")</span>
                                </div>
                                <div class="rating-stars">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= (Model.Rating ?? throw new NoNullAllowedException(nameof(Model.Rating))))
                                        {
                                            <i class="fas fa-star text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-star text-warning"></i>
                                        }
                                    }
                                </div>
                            </div>
                            <p>@Model.InitialMessage.MessageText</p>
                        </div>
                    }
                    else
                    {
                        <div class="initial-message mb-4">
                            <div class="message-card">
                                @if (Model.IsAnonymous && !User.IsInRole("Admin"))
                                {
                                    <div class="message-header">
                                        <span class="text-muted">@Model.InitialMessage.CreatedAt.ToString("yyyy-MM-dd HH:mm")</span>
                                    </div>
                                }
                                else
                                {
                                    <div class="message-header">
                                        @if (Model.InitialMessage.AuthorId is null)
                                        {
                                            <span class="fw-bold">@Model.InitialMessage.AuthorUsername</span>
                                        }
                                        else
                                        {
                                            <span class="fw-bold">
                                                <a asp-controller="Account" asp-action="PublicProfileById" asp-route-id="@Model.InitialMessage.AuthorId">@Model.InitialMessage.AuthorUsername</a>
                                            </span>
                                        }
                                        <span class="text-muted ms-2">@Model.InitialMessage.CreatedAt.ToString("yyyy-MM-dd HH:mm")</span>
                                    </div>
                                }
                                <div class="message-body mt-2">
                                    @if (Model.InitialMessage.DeletedAt.HasValue)
                                    {
                                        @if (Model.InitialMessage.DeletedByUsername == Model.InitialMessage.AuthorUsername)
                                        {
                                            <p class="text-muted fst-italic">User 
                                                @if (Model.InitialMessage.AuthorUsername.Equals("Anonymous", StringComparison.OrdinalIgnoreCase))
                                                {
                                                    @Model.InitialMessage.AuthorUsername
                                                }
                                                else
                                                {
                                                    <a asp-controller="Account" asp-action="PublicProfileById" asp-route-id="@Model.InitialMessage.AuthorId">@Model.InitialMessage.AuthorUsername</a>
                                                }
                                                deleted their message at @((Model.InitialMessage.DeletedAt ?? throw new NoNullAllowedException(nameof(Model.InitialMessage.DeletedAt))).ToString("g"))</p>
                                        }
                                        else
                                        {
                                            <p class="text-muted fst-italic">Admin @Model.InitialMessage.DeletedByUsername deleted this message</p>
                                        }
                                    }
                                    else
                                    {
                                        <p>@Model.InitialMessage.MessageText</p>
                                        
                                        @if (User.Identity?.IsAuthenticated == true && 
                                            (User.IsInRole("Admin") || User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.InitialMessage.AuthorId.ToString()))
                                        {
                                            <div class="message-actions mt-2">
                                                <form asp-action="DeleteMessage" asp-route-id="@Model.InitialMessage.Id" method="post" class="d-inline">
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this message?');">
                                                        <i class="fas fa-trash"></i> Delete
                                                    </button>
                                                </form>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    
                    <hr />
                    
                    <h4>Messages</h4>
                    
                    <div class="messages-container">
                        @foreach (var message in Model.Messages.Where(m => !m.IsInitialMessage))
                        {
                            <div class="message-card mb-3 p-3 border rounded">
                                <div class="message-header d-flex justify-content-between">
                                    <div>
                                        @if (message.AuthorId is null)
                                        {
                                            <span class="fw-bold">@message.AuthorUsername</span>
                                        }
                                        else
                                        {
                                            <span class="fw-bold">
                                                <a asp-controller="Account" asp-action="PublicProfileById" asp-route-id="@message.AuthorId" >@message.AuthorUsername</a>
                                            </span>
                                        }
                                        <span class="text-muted ms-2">@message.CreatedAt.ToString("yyyy-MM-dd HH:mm")</span>
                                    </div>
                                    
                                    @if (!message.DeletedAt.HasValue && User.Identity?.IsAuthenticated == true && 
                                        (User.IsInRole("Admin") || User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == message.AuthorId.ToString()))
                                    {
                                        <div class="message-actions">
                                            <form asp-action="DeleteMessage" asp-route-id="@message.Id" method="post" class="d-inline">
                                                <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this message?');">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            </form>
                                        </div>
                                    }
                                </div>
                                <div class="message-body mt-2">
                                    @if (message.DeletedAt.HasValue)
                                    {
                                        @if (message.DeletedByUsername == message.AuthorUsername)
                                        {
                                            <p class="text-muted fst-italic">User 
                                                @if (message.AuthorId is null)
                                                {
                                                    @message.AuthorUsername
                                                }
                                                else
                                                {
                                                    <a asp-controller="Account" asp-action="PublicProfileById" asp-route-id="@message.AuthorId">@message.AuthorUsername</a>
                                                }
                                                deleted their message at @((message.DeletedAt ?? throw new NoNullAllowedException(nameof(message.DeletedAt))).ToString("g"))</p>
                                        }
                                        else
                                        {
                                            <p class="text-muted fst-italic">Admin @message.DeletedByUsername deleted this message</p>
                                        }
                                    }
                                    else
                                    {
                                        <p>@message.MessageText</p>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <partial name="_ReplyFormPartial" model="new ThreadMessagePageModel { ThreadName = Model.ThreadName, MessageText = null }" />
                    }
                    else
                    {
                        <div class="alert alert-info mt-4">
                            <a asp-controller="Account" asp-action="Login">Log in</a> to join the discussion.
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <a asp-controller="Map" asp-action="Details" asp-route-id="@Model.LocationId" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to @Model.LocationName
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" 
          integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" 
          crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .rating-stars {
            color: #ffc107;
        }
        .message-card {
            background-color: #f8f9fa;
            border-radius: 0.25rem;
            padding: 1rem;
        }
        .initial-message .message-card {
            background-color: #e9ecef;
        }
    </style>
} 
