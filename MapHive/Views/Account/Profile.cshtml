@model MapHive.Models.ProfileViewModel
@{
    ViewData["Title"] = "My Profile";
}

<div class="container">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="card-title">Profile Information</h2>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-4 fw-bold">Username:</div>
                        <div class="col-md-8">@Model.Username</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4 fw-bold">Registration Date:</div>
                        <div class="col-md-8">@Model.RegistrationDate.ToString("MMMM dd, yyyy")</div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-4 fw-bold">
                            User Tier:
                            <span class="ms-1" data-bs-toggle="tooltip" data-bs-placement="top" title="Normal: Standard user access. Trusted: User's places are automatically approved. Admin: Full administrative privileges.">
                                <i class="bi bi-info-circle"></i>
                            </span>
                        </div>
                        <div class="col-md-8">
                            @{
                                string tierClass = Model.Tier switch
                                {
                                    UserTier.Admin => "bg-danger",
                                    UserTier.Trusted => "bg-success",
                                    _ => "bg-warning text-dark"
                                };
                            }
                            <span class="badge @tierClass">@Model.Tier</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2 class="card-title mb-0">My Places</h2>
                        <a asp-controller="Map" asp-action="Add" class="btn btn-light">Add New Place</a>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.UserLocations.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Created</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var location in Model.UserLocations)
                                    {
                                        <tr>
                                            <td>@location.Name</td>
                                            <td>@(location.Description.Length > 50 ? location.Description.Substring(0, 47) + "..." : location.Description)</td>
                                            <td>@location.CreatedAt.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-controller="Map" asp-action="Details" asp-route-id="@location.Id" class="btn btn-sm btn-primary">View</a>
                                                    <a asp-controller="Map" asp-action="Edit" asp-route-id="@location.Id" class="btn btn-sm btn-warning">Edit</a>
                                                    <a asp-controller="Map" asp-action="Delete" asp-route-id="@location.Id" class="btn btn-sm btn-danger">Delete</a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <p class="mb-0">You haven't added any places yet. <a asp-controller="Map" asp-action="Add" class="alert-link">Add your first place now!</a></p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="card-title">My Threads</h2>
                </div>
                <div class="card-body">
                    @if (Model.UserThreads.Any())
                    {
                        <ul class="nav nav-tabs" id="userThreadTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="user-discussions-tab" data-bs-toggle="tab" data-bs-target="#user-discussions" type="button" role="tab" aria-controls="user-discussions" aria-selected="true">
                                    Discussions (@Model.UserThreads.Count(t => !t.IsReviewThread))
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="user-reviews-tab" data-bs-toggle="tab" data-bs-target="#user-reviews" type="button" role="tab" aria-controls="user-reviews" aria-selected="false">
                                    Review Discussions (@Model.UserThreads.Count(t => t.IsReviewThread))
                                </button>
                            </li>
                        </ul>
                        
                        <div class="tab-content p-3 border border-top-0 rounded-bottom" id="userThreadTabsContent">
                            <div class="tab-pane fade show active" id="user-discussions" role="tabpanel" aria-labelledby="user-discussions-tab">
                                @{
                                    ViewData["IsReviewThread"] = false;
                                }
                                <partial name="_ThreadListPartial" model="Model.UserThreads" />
                            </div>
                            
                            <div class="tab-pane fade" id="user-reviews" role="tabpanel" aria-labelledby="user-reviews-tab">
                                @{
                                    ViewData["IsReviewThread"] = true;
                                }
                                <partial name="_ThreadListPartial" model="Model.UserThreads" />
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <p class="mb-0">You haven't participated in any discussions yet.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 mb-4">
            <div class="card shadow h-100">
                <div class="card-header bg-info text-white">
                    <h3 class="card-title">Change Username</h3>
                </div>
                <div class="card-body">
                    <form asp-action="ChangeUsername" method="post">
                        <div class="mb-3">
                            <label asp-for="ChangeUsernameModel.NewUsername" class="form-label">New Username</label>
                            <input asp-for="ChangeUsernameModel.NewUsername" class="form-control" />
                            <span asp-validation-for="ChangeUsernameModel.NewUsername" class="text-danger"></span>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Update Username</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card shadow h-100">
                <div class="card-header bg-info text-white">
                    <h3 class="card-title">Change Password</h3>
                </div>
                <div class="card-body">
                    <form asp-action="ChangePassword" method="post">
                        <div class="mb-3">
                            <label asp-for="ChangePasswordModel.CurrentPassword" class="form-label"></label>
                            <input asp-for="ChangePasswordModel.CurrentPassword" class="form-control" type="password" />
                            <span asp-validation-for="ChangePasswordModel.CurrentPassword" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="ChangePasswordModel.NewPassword" class="form-label"></label>
                            <input asp-for="ChangePasswordModel.NewPassword" class="form-control" type="password" />
                            <span asp-validation-for="ChangePasswordModel.NewPassword" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="ChangePasswordModel.ConfirmPassword" class="form-label"></label>
                            <input asp-for="ChangePasswordModel.ConfirmPassword" class="form-control" type="password" />
                            <span asp-validation-for="ChangePasswordModel.ConfirmPassword" class="text-danger"></span>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Update Password</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })
        });
    </script>
} 