@using MapHive.Models.PageModels
@model RegisterPageModel
@using reCAPTCHA.AspNetCore
@inject RecaptchaService Recaptcha
@inject Microsoft.Extensions.Options.IOptions<RecaptchaSettings> RecaptchaOptions
@{
    ViewData["Title"] = "Register";
}

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <h2 class="card-title text-center">Register</h2>
            </div>
            <div class="card-body">
                <form asp-action="Register" method="post" id="registerForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    
                    <div class="mb-3">
                        <label asp-for="Username" class="form-label"></label>
                        <input asp-for="Username" class="form-control" />
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Password" class="form-label"></label>
                        <input asp-for="Password" class="form-control" type="password" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                        <input asp-for="ConfirmPassword" class="form-control" type="password" />
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <!-- Standard reCAPTCHA implementation with callback -->
                        <div class="g-recaptcha" 
                             data-sitekey="@RecaptchaOptions.Value.SiteKey"
                             data-callback="onRecaptchaCompleted"></div>
                        <span asp-validation-for="RecaptchaResponse" class="text-danger"></span>
                        <!-- Hidden field to store the reCAPTCHA response for model binding -->
                        <input type="hidden" asp-for="RecaptchaResponse" id="RecaptchaResponse" />
                    </div>
                    
                    <div class="mb-3 d-grid">
                        <button type="submit" class="btn btn-primary">Register</button>
                    </div>
                </form>
                
                <div class="text-center mt-3">
                    <p>Already have an account? <a asp-action="Login">Login here</a></p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <script>
        // Define a callback function for when reCAPTCHA is completed
        window.onRecaptchaCompleted = function(token) {
            document.getElementById('RecaptchaResponse').value = token;
            console.log("reCAPTCHA response captured: " + token);
        };
        
        // Add event listener to the form to ensure reCAPTCHA response is copied before submission
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('registerForm').addEventListener('submit', function(e) {
                // Prevent default form submission
                e.preventDefault();
                
                // Get the response from reCAPTCHA
                var recaptchaResponse = document.querySelector('[name="g-recaptcha-response"]').value;
                console.log("reCAPTCHA response from form submission: " + recaptchaResponse);
                
                // Set it in our hidden field
                document.getElementById('RecaptchaResponse').value = recaptchaResponse;
                
                // Continue with form submission
                this.submit();
            });
        });
    </script>
} 