@using MapHive.Models.RepositoryModels
@model IEnumerable<MapLocationGet>

@{
    ViewData["Title"] = "Map View";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="display-4">Explore Places</h1>
            <p class="lead">Discover interesting locations around the world.</p>
        </div>
        <div class="col-md-4 text-end">
            @if (User.Identity?.IsAuthenticated == true)
            {
                <a asp-action="Add" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Add New Place
                </a>
            }
            else
            {
                <div class="alert alert-info">
                    <a asp-area="" asp-controller="Account" asp-action="Login" class="alert-link">Log in</a> to add your own places.
                </div>
            }
        </div>
    </div>
    
    <div class="row">
        <div class="col">
            <div id="map" style="width: 100%; height: 600px;"></div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" 
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" 
          crossorigin=""/>
    <style>
        #map {
            border-radius: 5px;
            border: 1px solid #ccc;
        }
    </style>
}

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>
    <script>
        // Initialize the map
        var map = L.map('map').setView([40, 0], 2);
        
        // Add the OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
        }).addTo(map);
        
        // Add markers for each location
        var locations = @Html.Raw(Json.Serialize(Model));
        
        locations.forEach(function(location) {
            var marker = L.marker([location.latitude, location.longitude]).addTo(map);
            
            marker.bindPopup(
                '<strong><a href="/Map/Details/' + location.id + '">' + location.name + '</a></strong><br>' +
                location.description + '<br>' +
                (location.address ? location.address + '<br>' : '') +
                (location.website ? '<a href="' + location.website + '" target="_blank">Website</a><br>' : '') +
                (location.phoneNumber ? 'Phone: ' + location.phoneNumber : '')
            );
        });
        
        // If we have locations, fit the map to show all markers
        if (locations.length > 0) {
            var group = new L.featureGroup(
                locations.map(function(location) {
                    return L.marker([location.latitude, location.longitude]);
                })
            );
            map.fitBounds(group.getBounds().pad(0.1));
        }
    </script>
} 