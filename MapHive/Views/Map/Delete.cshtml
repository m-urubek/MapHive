@using MapHive.Models.Data.DbTableModels
@model LocationExtended

@{
    ViewData["Title"] = "Delete Location";
}

<div class="container">
    <h2 class="my-4">@ViewData["Title"]</h2>
    
    <div class="alert alert-danger">
        <h4>Are you sure you want to delete this location?</h4>
        <p>This action cannot be undone.</p>
    </div>
    
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h4>Location Information</h4>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-4">Name</dt>
                        <dd class="col-sm-8">@Model.Name</dd>
                        
                        <dt class="col-sm-4">Description</dt>
                        <dd class="col-sm-8">@Model.Description</dd>
                        
                        <dt class="col-sm-4">Address</dt>
                        <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.Address) ? "N/A" : Model.Address)</dd>
                        
                        <dt class="col-sm-4">Coordinates</dt>
                        <dd class="col-sm-8">@Model.Latitude, @Model.Longitude</dd>
                        
                        <dt class="col-sm-4">Website</dt>
                        <dd class="col-sm-8">
                            @if (string.IsNullOrEmpty(Model.Website))
                            {
                                <span>N/A</span>
                            }
                            else
                            {
                                <a href="@Model.Website" target="_blank">@Model.Website</a>
                            }
                        </dd>
                        
                        <dt class="col-sm-4">Phone Number</dt>
                        <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.PhoneNumber) ? "N/A" : Model.PhoneNumber)</dd>
                    </dl>
                </div>
                <div class="card-footer">
                    <form asp-action="Delete" method="post">
                        <input type="hidden" asp-for="Id" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                    </form>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h4>Map Location</h4>
                </div>
                <div class="card-body">
                    <div id="map" style="width: 100%; height: 400px;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin="" />
    <link rel="stylesheet" href="~/css/map-dark.css" asp-append-version="true" />
    <style>
        #map {
            border-radius: 5px;
            border: 1px solid #ccc;
        }
    </style>
}

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>
    <script>
        $(document).ready(function() {
            // Initialize the map
            var map = L.map('map').setView([@Model.Latitude, @Model.Longitude], 13);
            
            // Add tiles based on current theme (authenticated fetch or localStorage)
            const isAuthenticated = document.body.dataset.authenticated === 'true';
            const darkUrl = 'https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}@@2x.png';
            const lightUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
            const darkAttrib = '&copy; <a href="https://carto.com/attributions">CARTO</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>';
            const lightAttrib = '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>';
            const loadTiles = enabled => {
                const url = enabled ? darkUrl : lightUrl;
                const attrib = enabled ? darkAttrib : lightAttrib;
                L.tileLayer(url, { maxZoom: 19, attribution: attrib }).addTo(map);
            };
            if (isAuthenticated) {
                fetch('/Account/GetDarkModePreference', { credentials: 'same-origin' })
                    .then(res => res.json())
                    .then(data => loadTiles(data.enabled))
                    .catch(() => loadTiles(false));
            } else {
                const themeDark = document.documentElement.classList.contains('dark-mode');
                loadTiles(themeDark);
            }
            
            // React to theme changes via custom event
            document.documentElement.addEventListener('themeChanged', function(e) {
                loadTiles(e.detail.dark);
            });
            
            // Add a marker for the location
            var marker = L.marker([@Model.Latitude, @Model.Longitude]).addTo(map);
            
            // Add a popup to the marker
            marker.bindPopup(
                '<strong>@Model.Name</strong><br>' +
                '@Model.Description<br>' +
                '@(string.IsNullOrEmpty(Model.Address) ? "" : Model.Address + "<br>")' +
                '@(string.IsNullOrEmpty(Model.Website) ? "" : "<a href=\"" + Model.Website + "\" target=\"_blank\">Website</a><br>")' +
                '@(string.IsNullOrEmpty(Model.PhoneNumber) ? "" : "Phone: " + Model.PhoneNumber)'
            ).openPopup();
        });
    </script>
} 